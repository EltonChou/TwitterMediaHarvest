name: Release

on:
  push:
    tags: [v*.*.*]

jobs:
  build:
    uses: ./.github/workflows/test.yml
    with:
      generate_artifact: true

  github_release:
    name: Create Github Release
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.artifact_name }}

    steps:
      - uses: actions/checkout@v3

      - name: Download Artifact
        id: download_artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ needs.build.outputs.artifact_name }}

      - name: Extract Changelog
        id: changelog
        uses: zogot/kacl-parser@1.0.0
        with:
          version: ${{ github.ref_name }}

      - name: Create Repository Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: 'TwitterMediaHarvest ${{ github.ref_name }}'
          artifacts: ${{ format('{0}/dist/*.zip', steps.download_artifact.outputs.download-path) }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.changelog.outputs.release }}

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          id: ${{ steps.create_release.id }}
          tag: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sentry_release:
    name: Create Sentry Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.artifact_name }}
    strategy:
      matrix:
        target: ['chrome', 'edge', 'firefox']

    steps:
      - uses: actions/checkout@v3

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1

      - name: Download Artifact
        id: download_artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ needs.build.outputs.artifact_name }}

      - name: Create Sentry release for ${{ matrix.target }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          # SENTRY_URL: https://sentry.io/
        with:
          version: ${{ format('{0}({1})@{2}', steps.package.outputs.name, matrix.target, steps.package.outputs.version)}}
          url_prefix: '~/'
          environment: production
          sourcemaps: ${{ format('{0}/build/{1}', steps.download_artifact.outputs.download-path, matrix.target) }}
